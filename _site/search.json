[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "website",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata &lt;- read_csv(\"artik.csv\")\n\nNew names:\nRows: 12089 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nlibrary(openair)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(latticeExtra)\n\nLoading required package: lattice\n\nAttaching package: 'latticeExtra'\n\nThe following object is masked from 'package:ggplot2':\n\n    layer\n\n\n\ndata2 &lt;- read_csv(\"sevan.csv\")\n\nNew names:\nRows: 2290 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata3 &lt;- read_csv(\"ashotsk.csv\")\n\nNew names:\nRows: 2047 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata4 &lt;- read_csv(\"azatan.csv\")\n\nNew names:\nRows: 9349 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata5 &lt;- read_csv(\"gavar.csv\")\n\nNew names:\nRows: 2196 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata6 &lt;- read_csv(\"maralik.csv\")\n\nNew names:\nRows: 11157 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata7 &lt;- read_csv(\"panik.csv\")\n\nNew names:\nRows: 8419 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata8 &lt;- read_csv(\"vazgen.csv\")\n\nNew names:\nRows: 15285 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata_new &lt;- data\ndata_new$year &lt;- strftime(data_new$time, \"%Y\")\ndata_new$month &lt;- strftime(data_new$time, \"%m\")\ndata_new$week &lt;- strftime(data_new$time, \"%w\")\ndata |&gt;\n  ggplot(mapping = aes(x = pm2_5, y = pm1)) + geom_point(aes(col=\"state\", size=\"popdensity\")) + geom_smooth(method=\"loess\", se=F) \n\nWarning: Using size for a discrete variable is not advised.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 353 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 353 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nggplot() + geom_smooth(data_new, mapping = aes(x = time, y = temperature)) + geom_smooth(data2, mapping = aes(x = time, y = temperature)) + geom_smooth(data3, mapping = aes(x = time, y = temperature)) +geom_smooth(data4, mapping = aes(x = time, y = temperature)) + geom_smooth(data5, mapping = aes(x = time, y = temperature)) + geom_smooth(data6, mapping = aes(x = time, y = temperature)) + geom_smooth(data7, mapping = aes(x = time, y = temperature)) + geom_smooth(data8, mapping = aes(x = time, y = temperature), color = \"orange\")\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 41 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n\n\n\n\n\n\nggplot() + geom_line(data_new, mapping = aes(x = time, y = pm1)) + geom_line(data2, mapping = aes(x = time, y = pm1)) + geom_line(data3, mapping = aes(x = time, y = pm1)) +geom_line(data4, mapping = aes(x = time, y = pm1)) + geom_line(data5, mapping = aes(x = time, y = pm1)) + geom_line(data6, mapping = aes(x = time, y = pm1)) + geom_line(data7, mapping = aes(x = time, y = pm1)) + geom_line(data8, mapping = aes(x = time, y = pm1), color = \"orange\")\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\ndata |&gt;\n  ggplot(data, mapping = aes(x = time, y=pm1)) + \n  geom_bar(stat=\"identity\", fill=\"tomato3\")\n\nWarning: Removed 353 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\ndata |&gt;\n  ggplot(data, mapping = aes(x = pm1, y = time)) + \n  geom_point(stat=\"identity\", size=6) \n\nWarning: Removed 353 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n#data\\(date &lt;- ymd_hms(data\\)time) #data\\(year &lt;- year(data\\)time) #data\\(hour &lt;- hour(data\\)time) #data\\(month &lt;- month(data\\)time) #data\\(day &lt;- day(data\\)time) #data_daily &lt;- timeAverage(data, avg.time = “day”) #head(data_daily) #data_monthly &lt;- timeAverage(data, avg.time = “month”) #head(data_monthly) #data_yearly &lt;- timeAverage(data, avg.time = “year”) #head(data_monthly)\n#timePlot(selectByDate(data, year = 2024, month = “may”), # pollutant = c(“pm2_5”, “pm10”, “ws”), #y.relation = “free”)"
  },
  {
    "objectID": "sources.html",
    "href": "sources.html",
    "title": "Sources",
    "section": "",
    "text": "An overview of sources used in my project."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]